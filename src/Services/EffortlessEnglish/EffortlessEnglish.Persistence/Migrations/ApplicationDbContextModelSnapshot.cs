// <auto-generated />
using System;
using EffortlessEnglish.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EffortlessEnglish.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EffortlessEnglish.Domain.Class", b =>
                {
                    b.Property<int>("ClassId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LevelId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClassId");

                    b.HasIndex("LevelId");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("EffortlessEnglish.Domain.Lesson", b =>
                {
                    b.Property<int>("LessonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClassId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("LessonId");

                    b.HasIndex("ClassId");

                    b.ToTable("Lesson");
                });

            modelBuilder.Entity("EffortlessEnglish.Domain.Level", b =>
                {
                    b.Property<int>("LevelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("LevelId");

                    b.ToTable("Levels");

                    b.HasData(
                        new
                        {
                            LevelId = 1,
                            Name = "Level 1"
                        },
                        new
                        {
                            LevelId = 2,
                            Name = "Level 2"
                        },
                        new
                        {
                            LevelId = 3,
                            Name = "Level 3"
                        },
                        new
                        {
                            LevelId = 4,
                            Name = "Level 4"
                        });
                });

            modelBuilder.Entity("EffortlessEnglish.Domain.Class", b =>
                {
                    b.HasOne("EffortlessEnglish.Domain.Level", null)
                        .WithMany("Classes")
                        .HasForeignKey("LevelId");
                });

            modelBuilder.Entity("EffortlessEnglish.Domain.Lesson", b =>
                {
                    b.HasOne("EffortlessEnglish.Domain.Class", null)
                        .WithMany("Lessons")
                        .HasForeignKey("ClassId");
                });
#pragma warning restore 612, 618
        }
    }
}
